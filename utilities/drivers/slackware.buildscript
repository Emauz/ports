#!/bin/bash

# Copyright 2018 Scott Court
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

######################## READ BEFORE EDITING THIS FILE #########################
# You probably should not ever need to edit this file. The only time this file #
#  should be edited is when maintaining the buildsystem as a whole. This file  #
#       should NEVER be edited when creating a package; in this case all       #
#         modifications should be made in the .buildinfo file instead.         #
################################################################################

# Driver Version
DRV_VERSION=0.0.1

# Changelog
# 0.0.1   Initial release

######################## Cucumber Linux Buildscript API ########################

####### Cucumber Linux Buildscript Driver for Slackware .SlackBuild Files ######

BASENAME=$( basename $0 | rev | cut -d . -f 2- | rev )

# Downloads the source for this package
drv_download () {
	if [ -z "$URL" ]; then
		echo "Error downloading source for $BASENAME: no URL is present in extra-build-info"
		exit 2
	fi

	pushd $OWD
	for url in $URL; do
		if [ -e $(basename $url) ]; then
			echo $(basename $url) already exists. Skipping. Delete it if you would like to redownload it.
		else
			echo Downloading $url
			curl -L -# -O $url || exit 1
		fi
	done
	popd
}

# Verifies the integrity of the downloaded source code
drv_verify () {
	pushd $OWD
	# Verify an checksums present in $OWD
	if [ -e "$OWD/sha512sums" ]; then
		echo Checking sha512sums
		sha512sum -c "$OWD/sha512sums" || exit 3
	fi
	if [ -e "$OWD/sha256sums" ]; then
		echo Checking sha256sums
		sha256sum -c "$OWD/sha256sums" || exit 3
	fi
	if [ -e "$OWD/sha1sums" ]; then
		echo Checking sha1sums
		sha1sum -c "$OWD/sha1sums" || exit 3
	fi
	if [ -e "$OWD/shasums" ]; then
		echo Checking shasums
		shasum -c "$OWD/shasums" || exit 3
	fi
	if [ -e "$OWD/md5sums" ]; then
		echo Checking md5sums
		md5sum -c "$OWD/md5sums" || exit 3
	fi

	# Run the 'verify' function if it exists
	if [ "$(type -t verify)" == "function" ]; then
		verify
		STATUS=$?
		if [ $STATUS -ne 0 ]; then
			echo "Verification failed ('verify' returned $STATUS)"
			exit 3
		fi
	fi
	popd
	echo Source checksum/signature verification completeled successfully.
}

# Lists the build time dependencies for this package
drv_builddeps () {
	echo $BUILDDEPS
}

# Builds the package
drv_build () {
	# Determine the architecture we are building on if it is not explicitly
	# specified
	if [ -z "$CUCARCH" ]; then
		case "$(uname -m)" in
		# For the x86 series, force i686
		i?86)
			export CUCARCH="i686"
			;;
		x86_64)
			export CUCARCH="x86_64"
			;;
		# Use "uname -m" for all other architectures
		*)
			export CUCARCH=$(uname -m)
		esac
	fi

	# Set architecture specific variables
	case "$CUCARCH" in
	i686)
		LIBDIRSUFFIX=""
		;;
	# For x86_64, set the libdir suffix to 64 (so we use /lib64
	# instead of /lib)
	x86_64)
		LIBDIRSUFFIX="64"
		;;
	*)
		LIBDIRSUFFIX=""
	esac

	# Set some variables specific to the build environment
	export TMP=${OUTDIR:-/tmp}

	# If the build directory already exists, remove it so we have a fresh
	# start
	if [ -e $BUILDDIR ]; then
		rm $BUILDDIR -rf
	fi

	# Build and compress the package
	pushd "$OWD"
	bash ${NAME}.SlackBuild || exit 1
	popd
}

# Displays the help message
drv_help () {
	cat << EOF
Cucumber Linux Build System Driver for Cucumber Linux Slackware formatted
.SlackBuild Files.
Driver Version: $DRV_VERSION

This is the Cucumber Linux build system driver for Slackware formatted
.SlackBuild files. It sources the extra-build-info file and uses the variables
and functions defined in there to facilitate building the package.

It also allows for different tasks to be done depending on what the first
argument to the script is. It supports the following arguments:

  * download - Downloads the source tarballs and other source files from the
    upstream provider.
  * verify - Verifies the checksums/signatures of the downloaded source
    tarballs and files.
  * builddeps - Lists the build time dependencies for this package. These are
    defined in the *.buildinfo file by setting the BUILDDEPS to an
    array containing the names of the packages it depends on, as they appear in
    the Cucumber Linux source/ports tree.
  * help - Displays this message.
  * no argument|build - Builds the package, accepting the same variables that
    the original buildscript format did.

This file should be the same for every single package. This allows us to make
global package changes by editing this one file. In other words you should
probably not be editing this file.
EOF
}

# Save the Original Working Directory
OWD=$(realpath $(dirname $0))

# Load everything from the appropriate .buildinfo file
source $OWD/extra-build-info

# Set some global variables
TARNAME=${TARNAME:-$NAME}
BUILD=${BUILD:-1}
export TAG=
# Make MAXJOBS default to the number of CPUs
export MAXJOBS=${MAXJOBS:-$(nproc)}

case $1 in
	download)	drv_download ;;
	verify)		drv_verify ;;
	builddeps)	drv_builddeps ;;
	build|"")	drv_build ;;
	help)		drv_help ;;
	*)		echo "Unsupported action. Use \`$0 help\` for a list of supported actions." ;;
esac

