#!/bin/bash

# Copyright 2016 Scott Court
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Cucumber Linux Buildscript for glibc

NAME=glibc
VERSION=${VERSION:-$(echo $NAME-*.tar.xz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

# Determine the architecture we are building on if it is not explicitly specified.
if [ -z "$CUCARCH" ]; then
	case "$(uname -m)" in
	# For the x86 series, force i686
	i?86)
		export CUCARCH="i686"
		LIBDIRSUFFIX=""
		;;
	# For x86_64, set the libdir suffix to 64 (so we use /lib64 instead of /lib)
	x86_64)
		export CUCARCH="x86_64"
		LIBDIRSUFFIX="64"
		;;
	# Use "uname -m" for all other architectures
	*)
		export CUCARCH=$(uname -m)
		LIBDIRSUFFIX=""
	esac
fi

PACKAGE=$NAME-$VERSION-$CUCARCH-$BUILD
BUILDDIR=${BUILDDIR:-/tmp/$PACKAGE}

# Save the Original Working Directory
OWD=$(pwd)

# If the build directory already exists, remove it so we have a fresh start
if [ -e $BUILDDIR ]; then
	rm $BUILDDIR -rfv
fi

# Make a temporary directory to build/stage in
mkdir $BUILDDIR/{bin,src} -pv
cd $BUILDDIR/src

tar -xf "$OWD/$NAME-$VERSION.tar.xz" || exit 1
cd $NAME-$VERSION || exit 1

# The Glibc documentation recommends building Glibc in a dedicated build directory: 
mkdir -v build
cd       build

# Do the actual build
../configure \
	--prefix=/usr \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--disable-profile \
	--enable-kernel=2.6.32 \
	--enable-obsolete-rpc \
	$CUCARCH-cucumber-linux || exit 1
make || exit 1
make install DESTDIR="$BUILDDIR"/bin || exit 1

# Install the configuration file and runtime directory for nscd:
cp -v ../nscd/nscd.conf $BUILDDIR/bin/etc/nscd.conf
mkdir -pv $BUILDDIR/bin/var/cache/nscd

# Install a minimalistic set of locales
make localedata/install-locales DESTDIR=$BUILDDIR/bin

# The /etc/nsswitch.conf file needs to be created because the Glibc defaults do not work well in a networked environment.
cat > $BUILDDIR/bin/etc/nsswitch.conf << "EOF"
#
# /etc/nsswitch.conf
#
# An example Name Service Switch config file. This file should be
# sorted with the most-used services at the beginning.
#
# The entry '[NOTFOUND=return]' means that the search for an
# entry should stop if the search in the previous entry turned
# up nothing. Note that if the search failed due to some other reason
# (like no NIS server responding) then the search continues with the
# next entry.
#
# Legal entries are:
#
#      nisplus or nis+         Use NIS+ (NIS version 3)
#      nis or yp               Use NIS (NIS version 2), also called YP
#      dns                     Use DNS (Domain Name Service)
#      files                   Use the local files
#      [NOTFOUND=return]       Stop searching if not found so far
#

passwd: files
group: files
shadow: files

hosts: files dns
networks: files

protocols: files
services: files
ethers: files
rpc: files

EOF

# Create a new file /etc/ld.so.conf
cat > $BUILDDIR/bin/etc/ld.so.conf << "EOF"
/usr/local/lib
/opt/lib

EOF
# Include lib64 if on x86_64
if [ "$CUCARCH" = "x86_64" ]; then
cat >> $BUILDDIR/bin/etc/ld.so.conf << "EOF"
/lib64
/usr/lib64
/usr/local/lib64

EOF
fi

# Strip
find $BUILDDIR/bin/{,usr/}{bin,lib${LIBDIRSUFIX},sbin} -type f \
	-exec strip --strip-debug '{}' ';'

# Copy any additional package scripts
mkdir -pv $BUILDDIR/bin/install
if [ -e $OWD/slack-desc ]; then
	cat $OWD/slack-desc > $BUILDDIR/bin/install/slack-desc
fi
if [ -e $OWD/doinst.sh ]; then
	cat $OWD/doinst.sh > $BUILDDIR/bin/install/doinst.sh
	chmod 755 $BUILDDIR/bin/install/doinst.sh
fi

# Compress the package
cd $BUILDDIR/bin
makepkg -l y -c n /tmp/$PACKAGE.txz || exit 1
echo "Package $PACKAGE was successfully built to:"
echo "/tmp/$PACKAGE.txz"

