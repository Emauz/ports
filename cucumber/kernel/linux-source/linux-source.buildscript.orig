#!/bin/bash

# Copyright 2016 Scott Court
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Cucumber Linux Buildscript for The Linux Kernel

NAME=linux-source
VERSION=${VERSION:-$(echo linux-*.tar.xz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}
MAXJOBS=${MAXJOBS:-8}

# Determine the architecture we are building on if it is not explicitly specified.
if [ -z "$CUCARCH" ]; then
	case "$(uname -m)" in
	# For the x86 series, force i686
	i?86)
		export CUCARCH="i686"
		LIBDIRSUFFIX=""
		;;
	# For x86_64, set the libdir suffix to 64 (so we use /lib64 instead of /lib)
	x86_64)
		export CUCARCH="x86_64"
		LIBDIRSUFFIX="64"
		;;
	# Use "uname -m" for all other architectures
	*)
		export CUCARCH=$(uname -m)
		LIBDIRSUFFIX=""
	esac
fi

PACKAGE=$NAME-$VERSION-$CUCARCH-$BUILD
BUILDDIR=${BUILDDIR:-/tmp/$PACKAGE}
DESTDIR=$BUILDDIR/bin

# Save the Original Working Directory
OWD=$(pwd)

# If the build directory already exists, remove it so we have a fresh start
if [ -e $BUILDDIR ]; then
	rm $BUILDDIR -rf
fi

# Make a temporary directory to build/stage in
mkdir $BUILDDIR/bin/usr/src -pv
cd $BUILDDIR/bin/usr/src

tar -xf "$OWD/linux-$VERSION.tar.xz" || exit 1
cd $DESTDIR/usr/src/linux-$VERSION || exit 1

# Configure the kernel
make mrproper || exit 1
cp $OWD/config-$CUCARCH .config || exit 1
make oldconfig || exit 1
make -j $MAXJOBS bzImage || exit 1
make clean || exit 1
make prepare || exit 1
rm .version || exit 1
ln -sfv linux-$VERSION $DESTDIR/usr/src/linux || exit 1

# Add symlinks to the kernel source to /lib/modules/$VERSION. For some reason,
# some third party packages expect to find them there, so we'll make them happy.
mkdir -pv $DESTDIR/lib/modules/$VERSION || exit 1
for tgt in source build; do
	ln -s /usr/src/linux-$VERSION $DESTDIR/lib/modules/$VERSION/$tgt || exit 1
done

# If we're on i686, make the symlinks in the -smp directory as well
if [ "$CUCARCH" == "i686" ]; then
	mkdir -pv $DESTDIR/lib/modules/$VERSION-smp || exit 1
	for tgt in source build; do
		ln -s /usr/src/linux-$VERSION $DESTDIR/lib/modules/$VERSION-smp/$tgt || exit 1
	done
fi

# Copy any additional package scripts
mkdir -pv $DESTDIR/install
if [ -e $OWD/slack-desc ]; then
	cat $OWD/slack-desc > $DESTDIR/install/slack-desc
fi
if [ -e $OWD/doinst.sh ]; then
	cat $OWD/doinst.sh > $DESTDIR/install/doinst.sh
	chmod 755 $DESTDIR/install/doinst.sh
fi

# Compress the package
cd $DESTDIR
makepkg -p -l y -c n /tmp/$PACKAGE.txz || exit 1
echo "Package $PACKAGE was successfully built to:"
echo "/tmp/$PACKAGE.txz"

